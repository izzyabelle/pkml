use std::fmt::Display;

use crate::pokemon::Pokemon;

/// Basically just a database of the type chart

#[derive(Debug, PartialEq, Eq, Copy, Clone)]
pub enum Poketype {
    Mono(Type),
    Dual([Type; 2]),
}

impl Default for Poketype {
    fn default() -> Self {
        Self::Mono(Default::default())
    }
}

impl Display for Poketype {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "{}",
            match self {
                Poketype::Mono(data) => format!("{}", data),
                Poketype::Dual(data) => format!("{} / {}", data[0], data[1]),
            }
        )
    }
}

impl Poketype {
    pub fn contains(&self, value: Type) -> bool {
        match self {
            Poketype::Mono(data) => value == *data,
            Poketype::Dual(data) => (value == data[0]) | (value == data[1]),
        }
    }
}

#[derive(Debug, Default, PartialEq, Eq, Copy, Clone)]
pub enum Type {
    #[default]
    Normal,
    Fire,
    Water,
    Electric,
    Grass,
    Ice,
    Fighting,
    Poison,
    Ground,
    Flying,
    Psychic,
    Bug,
    Rock,
    Ghost,
    Dragon,
    Dark,
    Steel,
    None,
}

impl Display for Type {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "{}",
            match self {
                Type::Normal => String::from("Normal"),
                Type::Fire => String::from("Fire"),
                Type::Water => String::from("Water"),
                Type::Electric => String::from("Electric"),
                Type::Grass => String::from("Grass"),
                Type::Ice => String::from("Ice"),
                Type::Fighting => String::from("Fighting"),
                Type::Poison => String::from("Poison"),
                Type::Ground => String::from("Ground"),
                Type::Flying => String::from("Flying"),
                Type::Psychic => String::from("Psychic"),
                Type::Bug => String::from("Bug"),
                Type::Rock => String::from("Rock"),
                Type::Ghost => String::from("Ghost"),
                Type::Dragon => String::from("Dragon"),
                Type::Dark => String::from("Dark"),
                Type::Steel => String::from("Steel"),
                Type::None => String::from("None"),
            }
        )
    }
}

impl Type {
    fn effectiveness(&self, target_type: &Type) -> f32 {
        match self {
            Type::Normal => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 0.5,
                Type::Ghost => 0.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 1.0,
                Type::None => 1.0,
            },
            Type::Fire => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 0.5,
                Type::Water => 0.5,
                Type::Electric => 1.0,
                Type::Grass => 2.0,
                Type::Ice => 2.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 2.0,
                Type::Rock => 0.5,
                Type::Ghost => 1.0,
                Type::Dragon => 0.5,
                Type::Dark => 1.0,
                Type::Steel => 2.0,
                Type::None => 1.0,
            },
            Type::Water => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 2.0,
                Type::Water => 0.5,
                Type::Electric => 1.0,
                Type::Grass => 0.5,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 2.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 2.0,
                Type::Ghost => 1.0,
                Type::Dragon => 0.5,
                Type::Dark => 1.0,
                Type::Steel => 1.0,
                Type::None => 1.0,
            },
            Type::Electric => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 2.0,
                Type::Electric => 0.5,
                Type::Grass => 0.5,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 0.0,
                Type::Flying => 2.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 0.5,
                Type::Dark => 1.0,
                Type::Steel => 1.0,
                Type::None => 1.0,
            },
            Type::Grass => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 0.5,
                Type::Water => 2.0,
                Type::Electric => 1.0,
                Type::Grass => 0.5,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 0.5,
                Type::Ground => 2.0,
                Type::Flying => 0.5,
                Type::Psychic => 1.0,
                Type::Bug => 0.5,
                Type::Rock => 2.0,
                Type::Ghost => 1.0,
                Type::Dragon => 0.5,
                Type::Dark => 1.0,
                Type::Steel => 1.0,
                Type::None => 1.0,
            },
            Type::Ice => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 0.5,
                Type::Water => 0.5,
                Type::Electric => 1.0,
                Type::Grass => 2.0,
                Type::Ice => 0.5,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 2.0,
                Type::Flying => 2.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 2.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Fighting => match target_type {
                Type::Normal => 2.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 2.0,
                Type::Fighting => 1.0,
                Type::Poison => 0.5,
                Type::Ground => 1.0,
                Type::Flying => 0.5,
                Type::Psychic => 0.5,
                Type::Bug => 0.5,
                Type::Rock => 2.0,
                Type::Ghost => 0.0,
                Type::Dragon => 1.0,
                Type::Dark => 2.0,
                Type::Steel => 2.0,
                Type::None => 1.0,
            },
            Type::Poison => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 2.0,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 0.5,
                Type::Ground => 0.5,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 0.5,
                Type::Ghost => 0.5,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Ground => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 2.0,
                Type::Water => 1.0,
                Type::Electric => 2.0,
                Type::Grass => 0.5,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 2.0,
                Type::Ground => 1.0,
                Type::Flying => 0.0,
                Type::Psychic => 1.0,
                Type::Bug => 0.5,
                Type::Rock => 2.0,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 2.0,
                Type::None => 1.0,
            },
            Type::Flying => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 0.5,
                Type::Grass => 2.0,
                Type::Ice => 1.0,
                Type::Fighting => 2.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 2.0,
                Type::Rock => 0.5,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Psychic => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 2.0,
                Type::Poison => 2.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 0.5,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 0.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Bug => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 0.5,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 2.0,
                Type::Ice => 1.0,
                Type::Fighting => 0.5,
                Type::Poison => 0.5,
                Type::Ground => 1.0,
                Type::Flying => 0.5,
                Type::Psychic => 2.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 0.5,
                Type::Dragon => 1.0,
                Type::Dark => 2.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Rock => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 2.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 2.0,
                Type::Fighting => 0.5,
                Type::Poison => 1.0,
                Type::Ground => 0.5,
                Type::Flying => 2.0,
                Type::Psychic => 1.0,
                Type::Bug => 2.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Ghost => match target_type {
                Type::Normal => 0.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 2.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 2.0,
                Type::Dragon => 1.0,
                Type::Dark => 0.5,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Dragon => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 2.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Dark => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 0.5,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 2.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 2.0,
                Type::Dragon => 1.0,
                Type::Dark => 0.5,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::Steel => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 0.5,
                Type::Water => 0.5,
                Type::Electric => 0.5,
                Type::Grass => 1.0,
                Type::Ice => 2.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 2.0,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 0.5,
                Type::None => 1.0,
            },
            Type::None => match target_type {
                Type::Normal => 1.0,
                Type::Fire => 1.0,
                Type::Water => 1.0,
                Type::Electric => 1.0,
                Type::Grass => 1.0,
                Type::Ice => 1.0,
                Type::Fighting => 1.0,
                Type::Poison => 1.0,
                Type::Ground => 1.0,
                Type::Flying => 1.0,
                Type::Psychic => 1.0,
                Type::Bug => 1.0,
                Type::Rock => 1.0,
                Type::Ghost => 1.0,
                Type::Dragon => 1.0,
                Type::Dark => 1.0,
                Type::Steel => 1.0,
                Type::None => 1.0,
            },
        }
    }

    pub fn calc_eff(&self, defending_type: &Poketype) -> f32 {
        match defending_type {
            Poketype::Mono(target) => self.effectiveness(target),
            Poketype::Dual(targets) => {
                self.effectiveness(&targets[0]) * self.effectiveness(&targets[1])
            }
        }
    }
}

impl Pokemon {
    pub fn has_type(&self, target: &Type) -> bool {
        match self.poketype {
            Poketype::Mono(type_) => *target == type_,
            Poketype::Dual(types) => *target == types[0] || *target == types[1],
        }
    }

    pub fn type_eff(&self, target: &Type) -> f32 {
        target.calc_eff(&self.poketype)
    }
}
